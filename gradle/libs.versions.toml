[versions]
ant = "1.10.12"
asciidoctorj = "2.5.6"
aspectj = "1.9.8"
assertj = "3.22.0"
caffeine = "2.9.3"
cglib = "3.3.0"
commons-codec = "1.15"
commons-lang = "2.6"
commons-lang3 = "3.12.0"
gorm = "7.2.2-SNAPSHOT"
gorm-hibernate = "7.2.3-SNAPSHOT"
gradle = "7.5.1"
gradle-extra-configurations-plugin = "7.0.0"
gradle-nexus-plugin = "2.3.1"
gradle-nexus-publish-plugin = "1.1.0"
grails-async = "5.0.0-SNAPSHOT"
grails-gdoc = "1.0.1"
grails-gsp = "5.2.2-SNAPSHOT"
grails-scaffolding = "5.0.0-SNAPSHOT"
grails-views = "2.3.2"
groovy = "3.0.12"
gson = "2.9.1"
h2 = "2.1.214"
hsqldb = "2.5.2"
itext = "2.0.8"
jansi = "1.18"
jakarta-annotation-api = "2.0.0"
javaparser = "3.15.14"
javassist = "3.29.0-GA"
javax-annotation = "1.3.2"
javax-el = "2.2"
javax-inject = "1"
javax-jaxb = "2.3.1"
javax-jsp = "2.2"
javax-jstl = "1.2"
javax-persistence = "2.2"
javax-servlet = "4.0.1"
jline = "2.14.6"
jna = "5.10.0"
json-unit = "2.36.0"
jsoup = "1.15.3"
junit-jupiter = "5.8.2"
junit-platform = "1.8.2"
maven = "3.6.3"
maven-resolver = "1.6.3"
methvin-directory-watcher = "0.16.1"
micronaut-cache = "3.5.0"
micronaut-core = "3.7.2"
micronaut-groovy = "3.4.0"
micronaut-spring = "4.3.1"
mockito = "4.0.0"
mongodb-java-driver = "4.4.2"
objenesis = "3.2"
slf4j = "1.7.36"
snakeyaml = "1.32"
spock = "2.3-groovy-3.0"
spring-boot = "2.7.5"
spring-dependency-management = "1.0.15.RELEASE"
spring-framework = "5.3.23"
standard-taglib = "1.2.5"
tomcat = "9.0.68"
xhtmlrenderer = "8.0"

[libraries]
ant = { module = "org.apache.ant:ant", version.ref = "ant" }
ant-junit = { module = "org.apache.ant:ant-junit", version.ref = "ant" }
asciidoctorj = { module = "org.asciidoctor:asciidoctorj", version.ref = "asciidoctorj" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
aspectj-rt = { module = "org.aspectj:aspectjrt", version.ref = "aspectj" }
aspectj-weaver = { module = "org.aspectj:aspectjweaver", version.ref = "aspectj" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
cglib = { module = "cglib:cglib-nodep", version.ref = "cglib" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
commons-lang = { module = "commons-lang:commons-lang", version.ref = "commons-lang" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
gorm-datastore-core = { module = "org.grails:grails-datastore-core", version.ref = "gorm" }
gorm-datastore-async = { module = "org.grails:grails-datastore-async", version.ref = "gorm" }
gorm-datastore-gorm = { module = "org.grails:grails-datastore-gorm", version.ref = "gorm" }
gorm-datastore-gorm-async = { module = "org.grails:grails-datastore-gorm-async", version.ref = "gorm" }
gorm-datastore-gorm-hibernate5 = { module = "org.grails:grails-datastore-gorm-hibernate5", version.ref = "gorm-hibernate" }
gorm-datastore-gorm-support = { module = "org.grails:grails-datastore-gorm-support", version.ref = "gorm" }
gorm-datastore-gorm-test = { module = "org.grails:grails-datastore-gorm-test", version.ref = "gorm" }
gorm-datastore-gorm-validation = { module = "org.grails:grails-datastore-gorm-validation", version.ref = "gorm" }
gorm-datastore-web = { module = "org.grails:grails-datastore-web", version.ref = "gorm" }
gradle-extra-configurations-plugin = { module = "com.netflix.nebula:gradle-extra-configurations-plugin", version.ref = "gradle-extra-configurations-plugin" }
gradle-nexus-plugin = { module = "com.bmuschko:gradle-nexus-plugin", version.ref = "gradle-nexus-plugin" }
gradle-nexus-publish-plugin = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "gradle-nexus-publish-plugin" }
gradle-tooling-api = { module = "org.gradle:gradle-tooling-api", version.ref = "gradle" }
grails-async = { module = "org.grails.plugins:async", version.ref = "grails-async" }
grails-gdoc-engine = { module = "org.grails:grails-gdoc-engine", version.ref = "grails-gdoc" }
grails-gsp = { module = "org.grails:grails-gsp", version.ref = "grails-gsp" }
grails-plugins-gsp = { module = "org.grails.plugins:gsp", version.ref = "grails-gsp" }
grails-web-gsp = { module = "org.grails:grails-web-gsp", version.ref = "grails-gsp" }
grails-web-sitemesh = { module = "org.grails:grails-web-sitemesh", version.ref = "grails-gsp" }
groovy-ant = { module = "org.codehaus.groovy:groovy-ant", version.ref = "groovy" }
groovy-console = { module = "org.codehaus.groovy:groovy-console", version.ref = "groovy" }
groovy-core = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
groovy-groovydoc = { module = "org.codehaus.groovy:groovy-groovydoc", version.ref = "groovy" }
groovy-groovysh = { module = "org.codehaus.groovy:groovy-groovysh", version.ref = "groovy" }
groovy-jmx = { module = "org.codehaus.groovy:groovy-jmx", version.ref = "groovy" }
groovy-json = { module = "org.codehaus.groovy:groovy-json", version.ref = "groovy" }
groovy-picocli = { module = "org.codehaus.groovy:groovy-cli-picocli", version.ref = "groovy" }
groovy-sql = { module = "org.codehaus.groovy:groovy-sql", version.ref = "groovy" }
groovy-swing = { module = "org.codehaus.groovy:groovy-swing", version.ref = "groovy" }
groovy-templates = { module = "org.codehaus.groovy:groovy-templates", version.ref = "groovy" }
groovy-test = { module = "org.codehaus.groovy:groovy-test", version.ref = "groovy" }
groovy-test-junit5 = { module = "org.codehaus.groovy:groovy-test-junit5", version.ref = "groovy" }
groovy-xml = { module = "org.codehaus.groovy:groovy-xml", version.ref = "groovy" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }
itext = { module = "com.lowagie:itext", version.ref = "itext" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
javaparser = { module = "com.github.javaparser:javaparser-core", version.ref = "javaparser" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
javax-annotation = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation" }
javax-el = { module = "javax.el:el-api", version.ref = "javax-el" }
javax-jaxb-api = { module = "javax.xml.bind:jaxb-api", version.ref = "javax-jaxb" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
javax-jsp = { module = "javax.servlet.jsp:jsp-api", version.ref = "javax-jsp" }
javax-jstl = { module = "javax.servlet:jstl", version.ref = "javax-jstl" }
javax-persistence = { module = "javax.persistence:javax.persistence-api", version.ref = "javax-persistence" }
javax-servlet = { module = "javax.servlet:javax.servlet-api", version.ref = "javax-servlet" }
jline = { module = "jline:jline", version.ref = "jline" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
json-unit = { module = "net.javacrumbs.json-unit:json-unit", version.ref = "json-unit" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-platform-engine = { module = "org.junit.platform:junit-platform-engine", version.ref = "junit-platform" }
junit-platform-runner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junit-platform" }
maven-model = { module = "org.apache.maven:maven-model", version.ref = "maven" }
maven-resolver-connectorBasic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "maven-resolver" }
maven-resolver-provider = { module = "org.apache.maven:maven-resolver-provider", version.ref = "maven" }
maven-resolver-impl = { module = "org.apache.maven.resolver:maven-resolver-impl", version.ref = "maven-resolver" }
maven-resolver-transportFile = { module = "org.apache.maven.resolver:maven-resolver-transport-file", version.ref = "maven-resolver" }
maven-resolver-transportHttp = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "maven-resolver" }
methvin-directoryWatcher = { module = "io.methvin:directory-watcher", version.ref = "methvin-directory-watcher" }
micronaut-inject = { module = "io.micronaut:micronaut-inject", version.ref = "micronaut-core" }
micronaut-spring = { module = "io.micronaut.spring:micronaut-spring", version.ref = "micronaut-spring" }
micronaut-spring-context = { module = "io.micronaut.spring:micronaut-spring-context", version.ref = "micronaut-spring" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
objenesis = { module = "org.objenesis:objenesis", version.ref = "objenesis" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jcl = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
spock-core = { module = "org.spockframework:spock-core", version.ref = "spock" }
spock-spring = { module = "org.spockframework:spock-spring", version.ref = "spock" }
spring-aspects = { module = "org.springframework:spring-aspects", version.ref = "spring-framework" }
spring-beans = { module = "org.springframework:spring-beans", version.ref = "spring-framework" }
spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
spring-boot-cli = { module = "org.springframework.boot:spring-boot-cli", version.ref = "spring-boot" }
spring-boot-configurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test", version.ref = "spring-boot" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-contextSupport = { module = "org.springframework:spring-context-support", version.ref = "spring-framework" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring-framework" }
spring-dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring-framework" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring-framework" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring-framework" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring-framework" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-framework" }
standard-taglib = { module = "org.apache.taglibs:taglibs-standard-impl", version.ref = "standard-taglib" }
tomcat-jdbc = { module = "org.apache.tomcat:tomcat-jdbc", version.ref = "tomcat" }
tomcat-embed-core = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat" }
xhtmlrenderer = { module = "org.xhtmlrenderer:core-renderer", version.ref = "xhtmlrenderer" }