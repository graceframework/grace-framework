[versions]
ant = "1.10.13"
asciidoctorj = "2.5.8"
aspectj = "1.9.19"
assertj = "3.22.0"
bytebuddy = "1.14.5"
caffeine = "3.1.6"
cglib = "3.3.0"
commons-codec = "1.15"
commons-lang = "2.6"
commons-lang3 = "3.12.0"
glassfish-web-jsp-jstl = "3.0.1"
gradle = "7.6.2"
gradle-git-properties = "2.4.1"
grace-async = "6.0.0-M3"
grace-events = "6.0.0-M3"
grails-gdoc = "1.0.1"
grace-gorm = "2023.0.0-SNAPSHOT"
grace-gorm-hibernate = "2023.0.0-SNAPSHOT"
grace-scaffolding = "6.0.0-M2"
grace-views = "6.0.0-M3"
groovy = "4.0.12"
gson = "2.9.1"
h2 = "2.1.214"
hsqldb = "2.7.1"
itext = "2.0.8"
jackson-databind = "2.14.3"
jansi = "1.18"
jakarta-annotation = "2.1.1"
jakarta-el = "4.0.0"
jakarta-inject = "2.0.0"
jakarta-persistence = "3.1.0"
jakarta-servlet = "6.0.0"
jakarta-servlet-jsp = "3.1.0"
jakarta-servlet-jsp-jstl = "3.0.0"
jakarta-transaction = "2.0.1"
jakarta-validation = "3.0.2"
jakarta-xml-bind = "4.0.0"
javaparser = "3.15.14"
javassist = "3.29.2-GA"
jline = "2.14.6"
json-unit = "2.36.0"
jsoup = "1.16.1"
jsr305 = "3.0.2"
junit-jupiter = "5.9.2"
junit-platform = "1.9.2"
maven = "3.6.3"
maven-resolver = "1.6.3"
methvin-directory-watcher = "0.18.0"
mockito = "4.5.1"
mongodb-java-driver = "4.6.1"
objenesis = "3.3"
sitemesh = "2.4.2"
slf4j = "2.0.7"
snakeyaml = "2.0"
spock = "2.3-groovy-4.0"
spring-boot = "3.0.7"
spring-dependency-management = "1.1.0"
spring-framework = "6.0.9"
tomcat = "10.1.8"
xhtmlrenderer = "8.0"

[libraries]
ant = { module = "org.apache.ant:ant", version.ref = "ant" }
ant-junit = { module = "org.apache.ant:ant-junit", version.ref = "ant" }
asciidoctorj = { module = "org.asciidoctor:asciidoctorj", version.ref = "asciidoctorj" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
aspectj-rt = { module = "org.aspectj:aspectjrt", version.ref = "aspectj" }
aspectj-weaver = { module = "org.aspectj:aspectjweaver", version.ref = "aspectj" }
bytebuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
cglib = { module = "cglib:cglib-nodep", version.ref = "cglib" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
commons-lang = { module = "commons-lang:commons-lang", version.ref = "commons-lang" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
glassfish-web-jsp-jstl = { module = "org.glassfish.web:jakarta.servlet.jsp.jstl", version.ref = "glassfish-web-jsp-jstl" }
gradle-tooling-api = { module = "org.gradle:gradle-tooling-api", version.ref = "gradle" }
grails-async-core = { module = "org.graceframework:grace-async-core", version.ref = "grace-async" }
grails-async-gpars = { module = "org.graceframework:grace-async-gpars", version.ref = "grace-async" }
grails-async-rxjava = { module = "org.graceframework:grace-async-rxjava", version.ref = "grace-async" }
grails-async-rxjava2 = { module = "org.graceframework:grace-async-rxjava2", version.ref = "grace-async" }
grails-async-rxjava3 = { module = "org.graceframework:grace-async-rxjava3", version.ref = "grace-async" }
grails-events-core = { module = "org.graceframework:grace-events-core", version.ref = "grace-events" }
grails-events-compat = { module = "org.graceframework:grace-events-compat", version.ref = "grace-events" }
grails-events-gpars = { module = "org.graceframework:grace-events-gpars", version.ref = "grace-events" }
grails-events-rxjava = { module = "org.graceframework:grace-events-rxjava", version.ref = "grace-events" }
grails-events-rxjava2 = { module = "org.graceframework:grace-events-rxjava2", version.ref = "grace-events" }
grails-events-rxjava3 = { module = "org.graceframework:grace-events-rxjava3", version.ref = "grace-events" }
grails-events-spring = { module = "org.graceframework:grace-events-spring", version.ref = "grace-events" }
grails-events-transform = { module = "org.graceframework:grace-events-transform", version.ref = "grace-events" }
grails-datastore-core = { module = "org.graceframework:grace-datastore-core", version.ref = "grace-gorm" }
grails-datastore-async = { module = "org.graceframework:grace-datastore-async", version.ref = "grace-gorm" }
grails-datastore-gorm = { module = "org.graceframework:grace-datastore-gorm", version.ref = "grace-gorm" }
grails-datastore-gorm-async = { module = "org.graceframework:grace-datastore-gorm-async", version.ref = "grace-gorm" }
grails-datastore-gorm-hibernate5 = { module = "org.graceframework:grace-datastore-gorm-hibernate5", version.ref = "grace-gorm-hibernate" }
grails-datastore-gorm-support = { module = "org.graceframework:grace-datastore-gorm-support", version.ref = "grace-gorm" }
grails-datastore-gorm-test = { module = "org.graceframework:grace-datastore-gorm-test", version.ref = "grace-gorm" }
grails-datastore-gorm-validation = { module = "org.graceframework:grace-datastore-gorm-validation", version.ref = "grace-gorm" }
grails-datastore-web = { module = "org.graceframework:grace-datastore-web", version.ref = "grace-gorm" }
grails-gdoc-engine = { module = "org.grails:grails-gdoc-engine", version.ref = "grails-gdoc" }
grails-plugin-async = { module = "org.graceframework.plugins:async", version.ref = "grace-async" }
grails-plugin-events = { module = "org.graceframework.plugins:events", version.ref = "grace-events" }
grails-scaffolding-core = { module = "org.graceframework:grace-scaffolding-core", version.ref = "grace-scaffolding" }
grails-views-core = { module = "org.graceframework:views-core", version.ref = "grace-views" }
grails-views-component = { module = "org.graceframework.plugins:views-component", version.ref = "grace-views" }
grails-views-gradle = { module = "org.graceframework.plugins:views-gradle", version.ref = "grace-views" }
grails-views-json = { module = "org.graceframework.plugins:views-json", version.ref = "grace-views" }
grails-views-json-templates = { module = "org.graceframework.plugins:views-json-templates", version.ref = "grace-views" }
grails-views-json-testing-support = { module = "org.graceframework:views-json-testing-support", version.ref = "grace-views" }
grails-views-markup = { module = "org.graceframework.plugins:views-markup", version.ref = "grace-views" }
groovy-ant = { module = "org.apache.groovy:groovy-ant", version.ref = "groovy" }
groovy-bom = { module = "org.apache.groovy:groovy-bom", version.ref = "groovy" }
groovy-console = { module = "org.apache.groovy:groovy-console", version.ref = "groovy" }
groovy-core = { module = "org.apache.groovy:groovy", version.ref = "groovy" }
groovy-dateutil = { module = "org.apache.groovy:groovy-dateutil", version.ref = "groovy" }
groovy-groovydoc = { module = "org.apache.groovy:groovy-groovydoc", version.ref = "groovy" }
groovy-groovysh = { module = "org.apache.groovy:groovy-groovysh", version.ref = "groovy" }
groovy-jmx = { module = "org.apache.groovy:groovy-jmx", version.ref = "groovy" }
groovy-json = { module = "org.apache.groovy:groovy-json", version.ref = "groovy" }
groovy-macro = { module = "org.apache.groovy:groovy-macro", version.ref = "groovy" }
groovy-nio = { module = "org.apache.groovy:groovy-nio", version.ref = "groovy" }
groovy-picocli = { module = "org.apache.groovy:groovy-cli-picocli", version.ref = "groovy" }
groovy-sql = { module = "org.apache.groovy:groovy-sql", version.ref = "groovy" }
groovy-swing = { module = "org.apache.groovy:groovy-swing", version.ref = "groovy" }
groovy-templates = { module = "org.apache.groovy:groovy-templates", version.ref = "groovy" }
groovy-test = { module = "org.apache.groovy:groovy-test", version.ref = "groovy" }
groovy-test-junit5 = { module = "org.apache.groovy:groovy-test-junit5", version.ref = "groovy" }
groovy-xml = { module = "org.apache.groovy:groovy-xml", version.ref = "groovy" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }
itext = { module = "com.lowagie:itext", version.ref = "itext" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-databind" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }
jakarta-el = { module = "jakarta.el:jakarta.el-api", version.ref = "jakarta-el" }
jakarta-inject = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
jakarta-servlet = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet" }
jakarta-servlet-jsp = { module = "jakarta.servlet.jsp:jakarta.servlet.jsp-api", version.ref = "jakarta-servlet-jsp" }
jakarta-servlet-jsp-jstl = { module = "jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api", version.ref = "jakarta-servlet-jsp-jstl" }
jakarta-transaction = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "jakarta-transaction" }
jakarta-validation = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation" }
jakarta-xml-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakarta-xml-bind" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
javaparser = { module = "com.github.javaparser:javaparser-core", version.ref = "javaparser" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
jline = { module = "jline:jline", version.ref = "jline" }
json-unit = { module = "net.javacrumbs.json-unit:json-unit", version.ref = "json-unit" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-platform-engine = { module = "org.junit.platform:junit-platform-engine", version.ref = "junit-platform" }
junit-platform-runner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junit-platform" }
maven-model = { module = "org.apache.maven:maven-model", version.ref = "maven" }
maven-resolver-connectorBasic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "maven-resolver" }
maven-resolver-provider = { module = "org.apache.maven:maven-resolver-provider", version.ref = "maven" }
maven-resolver-impl = { module = "org.apache.maven.resolver:maven-resolver-impl", version.ref = "maven-resolver" }
maven-resolver-transportFile = { module = "org.apache.maven.resolver:maven-resolver-transport-file", version.ref = "maven-resolver" }
maven-resolver-transportHttp = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "maven-resolver" }
methvin-directoryWatcher = { module = "io.methvin:directory-watcher", version.ref = "methvin-directory-watcher" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
objenesis = { module = "org.objenesis:objenesis", version.ref = "objenesis" }
sitemesh = { module = "opensymphony:sitemesh", version.ref = "sitemesh" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jcl = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
spock-core = { module = "org.spockframework:spock-core", version.ref = "spock" }
spock-spring = { module = "org.spockframework:spock-spring", version.ref = "spock" }
spring-aop = { module = "org.springframework:spring-aop", version.ref = "spring-framework" }
spring-aspects = { module = "org.springframework:spring-aspects", version.ref = "spring-framework" }
spring-beans = { module = "org.springframework:spring-beans", version.ref = "spring-framework" }
spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-boot-actuator-autoconfigure = { module = "org.springframework.boot:spring-boot-actuator-autoconfigure", version.ref = "spring-boot" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
spring-boot-cli = { module = "org.springframework.boot:spring-boot-cli", version.ref = "spring-boot" }
spring-boot-configurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test", version.ref = "spring-boot" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-contextSupport = { module = "org.springframework:spring-context-support", version.ref = "spring-framework" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring-framework" }
spring-dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management" }
spring-framework-bom = { module = "org.springframework:spring-framework-bom", version.ref = "spring-framework" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring-framework" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring-framework" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring-framework" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring-framework" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-framework" }
spring-websocket = { module = "org.springframework:spring-websocket", version.ref = "spring-framework" }
tomcat-jdbc = { module = "org.apache.tomcat:tomcat-jdbc", version.ref = "tomcat" }
tomcat-embed-core = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat" }
tomcat-embed-el = { module = "org.apache.tomcat.embed:tomcat-embed-el", version.ref = "tomcat" }
xhtmlrenderer = { module = "org.xhtmlrenderer:core-renderer", version.ref = "xhtmlrenderer" }

[bundles]
bom = ["groovy-bom", "spring-framework-bom", "spring-boot-dependencies"]
grails-async = ["grails-async-core", "grails-async-gpars", "grails-async-rxjava", "grails-async-rxjava2", "grails-async-rxjava3", "grails-plugin-async"]
grails-devtools = ["methvin-directoryWatcher"]
grails-events = ["grails-events-core", "grails-events-compat", "grails-events-gpars", "grails-events-rxjava", "grails-events-rxjava2", "grails-events-rxjava3", "grails-events-spring", "grails-events-transform", "grails-plugin-events"]
grails-gorm = ["grails-datastore-core", "grails-datastore-async", "grails-datastore-gorm", "grails-datastore-gorm-async", "grails-datastore-gorm-hibernate5", "grails-datastore-gorm-support", "grails-datastore-gorm-test", "grails-datastore-gorm-validation"]
grails-scaffolding = ["grails-scaffolding-core"]
grails-views = ["grails-views-component", "grails-views-core", "grails-views-gradle", "grails-views-json", "grails-views-json-templates", "grails-views-json-testing-support", "grails-views-markup"]
groovy = ["groovy-bom"]
jakarta = ["jakarta-annotation-api", "jakarta-el", "jakarta-inject", "jakarta-persistence-api", "jakarta-servlet", "jakarta-servlet-jsp", "jakarta-servlet-jsp-jstl", "jakarta-transaction", "jakarta-validation", "jakarta-xml-bind-api"]
spock = ["spock-core", "spock-spring"]
spring-boot = ["spring-boot-dependencies"]
spring-framework = ["spring-framework-bom"]
snakeyaml = ["snakeyaml"]