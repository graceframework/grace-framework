configurations.all {
    resolutionStrategy {
        preferProjectModules()
    }
}

configurations.testCompileClasspath {
    exclude module: "grails-plugin-testing"
}

dependencies {

    testImplementation "javax.servlet.jsp:jsp-api:2.2"
    testImplementation "jstl:jstl:1.2"
    testImplementation "javax.el:el-api:2.2"

    testImplementation project(":grails-boot")
    testImplementation project(":grails-test-suite-base")
    testImplementation project(":grails-plugin-domain-class")
    testImplementation project(":grails-plugin-codecs")
    testImplementation project(":grails-plugin-datasource")
    testImplementation project(":grails-plugin-i18n")
    testImplementation project(":grails-plugin-url-mappings")
    testImplementation project(":grails-plugin-databinding")
    testImplementation project(":grails-plugin-services")
    testImplementation project(":grails-plugin-interceptors")
    testImplementation project(":grails-plugin-controllers")
    testImplementation project(":grails-plugin-rest")
    testImplementation project(":grails-web")
    testImplementation project(":grails-web-databinding")
    testImplementation project(":grails-spring")
    testImplementation "org.grails.plugins:converters:$convertersVersion"

    testImplementation "org.grails:grails-datastore-gorm-hibernate5:$hibernateDatastoreVersion", {
        exclude group: 'org.grails', module:'grails-datastore-gorm'
        exclude group: 'org.grails', module:'grails-datastore-core'
        exclude group: 'org.springframework', module:'spring-core'
        exclude group: 'org.springframework', module:'spring-context'
        exclude group: 'org.springframework', module:'spring-web'
        exclude group: 'org.springframework', module:'spring-beans'
        exclude group: 'org.springframework', module:'spring-tx'
        exclude group: 'org.slf4j', module:'jcl-over-slf4j'
        exclude group: 'org.slf4j', module:'jul-to-slf4j'
        exclude group: 'org.slf4j', module:'slf4j-api'
        exclude group: 'org.slf4j', module:'slf4j-simple'
        exclude group: 'org.grails', module:'grails-bootstrap'
        exclude group: 'org.grails', module:'grails-plugin-domain-class'
        exclude group: 'org.grails', module:'grails-core'
        exclude group: 'org.grails', module:'grails-web'
        exclude group: 'org.grails', module:'grails-test'
        exclude group: 'org.grails', module:'grails-async'
        exclude group: 'org.grails', module:'grails-spring'
        exclude group: 'commons-collections', module:'commons-collections'
        exclude group: 'commons-lang', module:'commons-lang'
        exclude group: 'javassit', module:'javassist'
        exclude group: 'java-persistence', module:'persistence-api'
        exclude group: 'javassist', module: 'javassist'
    }

    // Required for tag library support
    testImplementation 'taglibs:standard:1.1.2'
    testImplementation "javax.servlet:jstl:1.2"

    testImplementation "org.grails:grails-web-testing-support:$testingSupportVersionForTests", {
        exclude module:'grails-plugin-codecs'
        exclude module:'grails-plugin-rest'
        exclude module:'grails-plugin-interceptors'
        exclude module:'grails-test'
        exclude module:'grails-core'
        exclude module:'async'
        exclude module:'gsp'
    }
    testImplementation "org.grails.plugins:gsp:$gspVersion", {
        exclude module:'grails-plugin-codecs'
        exclude module:'grails-plugin-controllers'
        exclude module:'grails-core'
        exclude module:'grails-plugin-domain-class'
        exclude module:'grails-web-common'
        exclude module:'grails-encoder'
    }
    testImplementation "org.grails.plugins:async:$asyncVersion", {
        exclude module:'grails-plugin-codecs'
        exclude module:'grails-plugin-controllers'
        exclude module:'grails-core'
        exclude module:'grails-plugin-domain-class'
    }
    testImplementation "org.grails:grails-gorm-testing-support:$testingSupportVersionForTests", {
        exclude module:'grails-plugin-codecs'
        exclude module:'grails-plugin-domain-class'
        exclude module:'grails-test'
        exclude module:'async'
    }

    testRuntimeOnly "org.springframework:spring-aspects:${springVersion}"
    testRuntimeOnly "org.aspectj:aspectjrt:$aspectjVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion"

}

// javaee-web-api has a bad versions of classes we need to compile against
// Just remove it fromt the compile classpath here
configurations {
    testCompileClasspath {
        exclude module: "javaee-web-api"
    }
}

compileTestGroovy {
    // groovyOptions.listFiles = true
}

def defaultTestConfig = {
    maxParallelForks = isCiBuild ? 2 : 4
    forkEvery = isCiBuild ? 10 : 100
    excludes = ["**/*TestCase.class",
                "**/*\$*.class"]
}

def isolatedTests = ["**/ContentFormatControllerTests.class",
                "**/JSONBindingTests.class",
                "**/AutoParams*MarshallingTests.class",
                "**/JSONBindingToNullTests.class",
                "**/ControllerWithXmlConvertersTests.class",
                "**/GroovyPageAttributesTests.class",
                "**/BindingExcludeTests.class",
                "**/NestedXmlBindingTests.class",
		"**/GSPResponseWriterSpec.class",
		"**/RespondMethodSpec.class",
        "**/ContentNegotiationSpec.class",
        "**/pages/ext/jsp/*.class",
        "**/WithFormatContentTypeSpec.class",
        "**/CommandObjectNoDataSpec.class"]

task execIsolatedTests(type: Test) {
    configure defaultTestConfig
    forkEvery = 1
    includes = isolatedTests
}

task createCombinedReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn execIsolatedTests, test
}

test {
    configure defaultTestConfig
    excludes += isolatedTests
}

test.dependsOn execIsolatedTests
