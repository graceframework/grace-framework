dependencies {
    compileOnly "io.micronaut.spring:micronaut-spring-context:$micronautSpringVersion"
    api "org.springframework.boot:spring-boot:$springBootVersion"
    api "org.springframework:spring-beans:${springVersion}"
    api "org.springframework:spring-context:${springVersion}"
    api "org.springframework:spring-core:${springVersion}"
    api "org.springframework:spring-tx:${springVersion}"

    api project(":grails-api")
    api project(":grails-bootstrap")
    api project(":grails-plugin-api")
    api project(":grails-spring")
    api project(":grails-util")

    api "org.grails:grails-datastore-core:$datastoreVersion"

    testImplementation project(":grails-plugin-core")
    testImplementation project(":grails-test")
    testImplementation "org.springframework:spring-jdbc:${springVersion}"
    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "io.micronaut.spring:micronaut-spring-context:$micronautSpringVersion"
}

def writeProps = tasks.register('writeGrailsProperties', WriteProperties) {
    outputFile = file("${buildDir}/grails.build.properties")
    property("grails.version", project.version)
}

tasks.named('processResources') {
    from writeProps
}

eclipse {
    classpath {
       file {
           whenMerged { classpath ->
                // don't add global ASTs since the source code is in this project and that causes greclipse compilation to fail
                classpath.entries.find { entry -> entry.kind == 'src' && entry.path == "src/main/resources" }?.excludes=["META-INF/services/org.codehaus.groovy.transform.ASTTransformation"]
           }
       }
    }
}
