apply plugin:'application'

mainClassName = "org.grails.cli.GrailsCli"

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

configurations {
	dependenciesBom
    all*.exclude group: 'org.codehaus.groovy', module: 'groovy-xml'
}

dependencies {
    api project(":grails-api")
    api project(":grails-bootstrap")
    api project(":grails-gradle-model")
    api project(":grails-util")
    dependenciesBom(project(path: ":grails-bom", configuration: 'effectiveBom'))
    api "org.apache.ant:ant:$antVersion"
    api "org.codehaus.groovy:groovy-ant:$groovyVersion"
    api "org.codehaus.groovy:groovy-json:$groovyVersion"
    api "org.codehaus.groovy:groovy-jmx:$groovyVersion"
    api "org.fusesource.jansi:jansi:$jansiVersion"
    api "jline:jline:$jlineVersion"
    api gradleApi()

    api "org.springframework.boot:spring-boot-cli:$springBootVersion", {
        exclude group: "org.codehaus.groovy", module: "groovy"
    }
    implementation("org.apache.maven:maven-resolver-provider:3.6.3") {
        exclude group: "com.google.guava", module: "guava"
    }

    implementation("org.apache.maven.resolver:maven-resolver-connector-basic:1.6.3")
    implementation("org.apache.maven.resolver:maven-resolver-impl:1.6.3")
    implementation("org.apache.maven.resolver:maven-resolver-transport-file:1.6.3")
    implementation("org.apache.maven.resolver:maven-resolver-transport-http:1.6.3") {
        exclude group: "org.slf4j", module:"jcl-over-slf4j"
    }

    testImplementation "net.sf.expectit:expectit-core:0.9.0"
    testImplementation "com.github.jnr:jnr-posix:3.1.15"

    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
}

task syncGrailsDependenciesBom(type: Sync) {
	destinationDir = file("${buildDir}/generated-resources/org/grails/cli/boot/dependencies")
	from configurations.dependenciesBom
}

sourceSets {
	main {
		output.dir("${buildDir}/generated-resources", builtBy: "syncGrailsDependenciesBom")
	}
}

eclipse {
    classpath {
       file {
           whenMerged { classpath ->
                classpath.entries.find { entry -> entry.kind == 'src' && entry.path == "src/test/resources" }?.excludes=["profiles-repository/**", "gradle-sample/**"]
           }
       }
    }
}

apply from: "../gradle/integration-test.gradle"

integrationTest {
    // jline doesn't use jline.terminal system property when TERM is dumb so use different TERM value for tests
    // https://github.com/jline/jline2/blob/6a1b6bf/src/main/java/jline/TerminalFactory.java#L54-L57
    environment 'TERM', 'xterm'
    // execute in single thread
    maxParallelForks = 1
}
